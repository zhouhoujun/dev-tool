"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_=require("lodash"),minimist=require("minimist"),LoaderFactory_1=require("./LoaderFactory"),development_core_1=require("development-core"),Context_1=require("./Context"),chalk=require("chalk"),Development=function(){function e(t,n){_classCallCheck(this,e),this.dirname=t,this.config=n}return _createClass(e,[{key:"run",value:function(e,t){var n=this;return this.setupTasks(e,t).then(function(r){var o=n.getContext(t);return n.config.runWay===development_core_1.RunWay.parallel?development_core_1.runSequence(e,[development_core_1.flattenSequence(e,r,o)]):development_core_1.runSequence(e,r)}).catch(function(e){console.error(e),process.exit(1)})}},{key:"startTask",value:function(e,t){var n=this;return this.setupTasks(e,t).then(function(r){var o=t.task?t.task.split(","):r,a=n.getContext(t);return n.config.runWay===development_core_1.RunWay.parallel?development_core_1.runSequence(e,[development_core_1.flattenSequence(e,o,a)]):development_core_1.runSequence(e,o)})}},{key:"setupTasks",value:function(e,t){t.root||(t.root=this.dirname),t.help&&(console.log(chalk.grey("... main help  ...")),this.printHelp(t.help));var n=this.getContext(t);return this.loadTasks(e,this.config.tasks,n).catch(function(e){console.error(e),process.exit(1)})}},{key:"getContext",value:function(e){if(!this.globalctx||this.globalctx.env!==e){var t=this.config.option||{};this.globalctx=this.config.contextFactory({env:e,option:t})}return this.globalctx}},{key:"loadTasks",value:function(e,t,n){var r=this;return Promise.all(_.map(_.isArray(t)?t:[t],function(t){t.dist=t.dist||"dist";var o=r.createLoader(t,n);return o.loadContext(n.env).then(function(t){return console.log(chalk.green("task context loaded.")),t.env.help?(t.printHelp&&(console.log(chalk.grey("...development default help...")),t.printHelp(_.isString(t.env.help)?t.env.help:"")),[]):Promise.all([o.load(t),r.loadAssertTasks(e,t),r.loadSubTask(e,t)]).then(function(n){return console.log(chalk.green("tasks loaded.")),r.setup(e,t,n[0],n[1],n[2])})})})).then(function(t){var r=[];return _.each(t,function(t){var o=development_core_1.zipSequence(e,t,n);o&&r.push(o)}),r})}},{key:"setup",value:function(e,t,n,r,o){return Promise.resolve(development_core_1.toSequence(e,n,t)).then(function(e){return t.runTasks?t.runTasks(e,r,o):(t.addToSequence(e,r),t.addToSequence(e,o),e)})}},{key:"loadSubTask",value:function(e,t){var n=this;if(!t.option.tasks)return Promise.resolve(null);var r=function(){var r=t.option;return _.each(_.isArray(r.tasks)?r.tasks:[r.tasks],function(e){e.name=t.subTaskName(e.name),e.src=e.src||r.src,e.dist=e.dist||r.dist}),{v:n.loadTasks(e,r.tasks,t).then(function(n){var o=void 0;return o=r.subTaskRunWay===development_core_1.RunWay.parallel?[development_core_1.flattenSequence(e,n,t,function(e,n){return t.subTaskName(e,n===development_core_1.RunWay.sequence?"-subs":"-subp")})]:development_core_1.zipSequence(e,n,t,function(e,n){return t.subTaskName(e,n===development_core_1.RunWay.sequence?"-subs":"-subp")}),o?{order:r.subTaskOrder,taskName:o}:null})}}();return"object"===("undefined"==typeof r?"undefined":_typeof(r))?r.v:void 0}},{key:"loadAssertTasks",value:function(e,t){var n=this,r=t.option;if(!r.asserts)return Promise.resolve(null);var o=function(){var o=[];return _.each(_.keys(r.asserts),function(e){var n=void 0,a=r.asserts[e];_.isString(a)?n={src:a,loader:[{name:e,pipes:[],watch:!0}]}:_.isNumber(a)?n={loader:[{oper:a,name:e,pipes:[]}]}:_.isFunction(a)?n={loader:a}:_.isArray(a)?a.length>0&&(n=_.isString(_.first(a))?{src:a,loader:[{name:e,pipes:[],watch:!0}]}:{loader:a,watch:!0}):n=a,_.isNull(n)||_.isUndefined(n)||(n.name=n.name||t.subTaskName(e),n.src=n.src||t.getSrc({oper:development_core_1.Operation.build})+"/**/*."+e,n.dist=n.dist||t.getDist({oper:development_core_1.Operation.build}),o.push(n))}),{v:Promise.all(_.map(o,function(r){return n.loadTasks(e,r,t).then(function(e){return{task:r,sq:e}})})).then(function(n){var o=_.map(n,function(n){return development_core_1.zipSequence(e,n.sq,t,function(e,r){return t.subTaskName(n.task.name,r===development_core_1.RunWay.sequence?"-asserts":"-assertp")})}),a=void 0;return a=r.assertsRunWay===development_core_1.RunWay.sequence?o:development_core_1.zipSequence(e,[o],t,function(e,t){return e+(t===development_core_1.RunWay.sequence?"-asserts":"-assertp")}),{order:r.assertsOrder,taskName:a}})}}();return"object"===("undefined"==typeof o?"undefined":_typeof(o))?o.v:void 0}},{key:"createLoader",value:function(e,t){var n=this;if(_.isFunction(this.config.loaderFactory))return this.config.loaderFactory(e,t.env);var r=new LoaderFactory_1.LoaderFactory;return r.create(e,t.env,function(e,r){return n.config.contextFactory(e,r||t)})}},{key:"printHelp",value:function(e){"en"===e?console.log("\n                /**\n                 * gulp [build] [--env production|development] [--context name] [--root path] [--watch] [--test] [--serve] [--release] [--task taskname]\n                 * @params\n                 *  --env  development or production;\n                 *  --context app setting\n                 *  --root path, set relative path of the development tool root.\n                 *  --watch  watch src file change or not. if changed will auto update to node service. \n                 *  --release release web app or not. if [--env production], default to release. \n                 *  --test  need auto load test file to node service.\n                 *  --deploy run deploy tasks to deploy project.  \n                 *  --serve start node web service or not.\n                 *  --task taskname  spruce task taskname\n                 **/"):console.log("\n                /**\n                 * gulp [build] [--env production|development] [--context name] [--root path] [--watch] [--test] [--serve] [--release] [--task taskname]\n                 * @params\n                 *  --env 发布环境 默认开发环境development;\n                 *  --context 设置配置文件;\n                 *  --root path, 设置编译环境相对路径\n                 *  --watch  是否需要动态监听文件变化\n                 *  --release 是否release编译, [--env production] 默认release \n                 *  --test  启动自动化测试\n                 *  --deploy 运行加载deploy tasks, 编译发布项目。  \n                 *  --serve  是否在开发模式下 开启node web服务\n                 *  --task taskname  运行单独任务taskname\n                 **/")}}],[{key:"create",value:function(t,n,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:development_core_1.RunWay.sequence,a=arguments[4],s=_.isArray(r)?{tasks:r,runWay:o}:r;_.isUndefined(s.runWay)||(s.runWay=o),s.contextFactory=a||function(e,t){var n=new Context_1.Context(e,t);return t&&t.add&&t.add(n),n};var u=new e(n,s);return s.setupTask=s.setupTask||"build",t.task(s.setupTask,function(e){var n=minimist(process.argv.slice(2),{string:"env",default:{env:process.env.NODE_ENV||"development"}});return u.run(t,n)}),s.startTask=s.startTask||"start",t.task(s.startTask,function(e){var n=minimist(process.argv.slice(2),{string:"env",default:{env:process.env.NODE_ENV||"development"}});return u.startTask(t,n)}),t.task("default",function(){t.start(s.setupTask)}),u}}]),e}();exports.Development=Development;
//# sourceMappingURL=sourcemaps/Development.js.map
