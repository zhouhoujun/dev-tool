{"version":3,"sources":["Development.ts"],"names":[],"mappings":"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","file":"../Development.js","sourcesContent":["import * as _ from 'lodash';\r\nimport { Gulp } from 'gulp';\r\nimport { Operation, ITaskConfig, Src, IAssertOption, IDynamicTaskOption, RunWay } from 'development-core';\r\nimport { TaskOption, ITaskOption } from './TaskOption';\r\nimport { IContext } from './IContext';\r\nimport { Context, createConextInstance } from './Context';\r\n\r\ninterface TaskSeq {\r\n    opt: ITaskOption,\r\n    seq: Src[]\r\n}\r\n\r\n/**\r\n * Development.\r\n *\r\n * @export\r\n * @class Development\r\n * @extends {Context}\r\n */\r\nexport class Development extends Context {\r\n\r\n    /**\r\n     * create development tool.\r\n     *\r\n     * @static\r\n     * @param {Gulp} gulp\r\n     * @param {string} root  root path.\r\n     * @param {(ITaskConfig | Array<IAssertOption | ITaskOption | IDynamicTaskOption>)} setting\r\n     * @param {any} [runWay=RunWay.sequence]\r\n     * @returns {Development}\r\n     *\r\n     * @memberOf Development\r\n     */\r\n    static create(gulp: Gulp, root: string, setting: ITaskConfig | Array<IAssertOption | ITaskOption | IDynamicTaskOption>, name = '', runWay = RunWay.sequence): Development {\r\n        let config: ITaskConfig;\r\n        let option: ITaskOption;\r\n        if (_.isArray(setting)) {\r\n            config = { option: <ITaskOption>{ name: name, tasks: setting, runWay: runWay, loader: [] } };\r\n        } else {\r\n            config = setting;\r\n            option = config.option as ITaskOption;\r\n            option.name = option.name || name;\r\n            if (!_.isUndefined(option.runWay)) {\r\n                option.runWay = runWay;\r\n            }\r\n        }\r\n\r\n        let devtool = new Development(config, root);\r\n        devtool.start();\r\n        return devtool;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of Development.\r\n     * @param {ITaskConfig} config\r\n     * @param {string} root root path.\r\n     * @param {IContext} [parent]\r\n     * @memberof Development\r\n     */\r\n    public constructor(config: ITaskConfig, root: string, parent?: IContext) {\r\n        super(config, parent);\r\n\r\n        this.setConfig({\r\n            env: { root: root },\r\n            printHelp: this.cfg.printHelp || this.printHelp\r\n        })\r\n\r\n        this.builder();\r\n    }\r\n\r\n    /**\r\n     * build context component.\r\n     *\r\n     * @protected\r\n     * @memberof Development\r\n     */\r\n    protected builder() {\r\n        let opt = this.option as ITaskOption;\r\n        this.buildContext(opt, this);\r\n    }\r\n\r\n\r\n    protected printHelp(help: string) {\r\n        if (help === 'en') {\r\n\r\n            console.log(`\r\n                /**\r\n                 * gulp [build] [--env production|development] [--context name] [--root path] [--watch] [--test] [--serve] [--release] [--task taskname]\r\n                 * @params\r\n                 *  --env  development or production;\r\n                 *  --context app setting\r\n                 *  --root path, set relative path of the development tool root.\r\n                 *  --watch  watch src file change or not. if changed will auto update to node service.\r\n                 *  --release release web app or not. if [--env production], default to release.\r\n                 *  --test  need auto load test file to node service.\r\n                 *  --deploy run deploy tasks to deploy project.\r\n                 *  --serve start node web service or not.\r\n                 *  --task taskname  spruce task taskname\r\n                 **/`);\r\n\r\n        } else {\r\n\r\n            console.log(`\r\n                /**\r\n                 * gulp [build] [--env production|development] [--context name] [--root path] [--watch] [--test] [--serve] [--release] [--task taskname]\r\n                 * @params\r\n                 *  --env 发布环境 默认开发环境development;\r\n                 *  --context 设置配置文件;\r\n                 *  --root path, 设置编译环境相对路径\r\n                 *  --watch  是否需要动态监听文件变化\r\n                 *  --release 是否release编译, [--env production] 默认release\r\n                 *  --test  启动自动化测试\r\n                 *  --deploy 运行加载deploy tasks, 编译发布项目。\r\n                 *  --serve  是否在开发模式下 开启node web服务\r\n                 *  --task taskname  运行单独任务taskname\r\n                 **/`);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * build asserts tasks.\r\n     *\r\n     * @protected\r\n     * @param {ITaskContext} ctx\r\n     *\r\n     * @memberOf Development\r\n     */\r\n    protected buildAssertContext(ctx: IContext) {\r\n        let optask = <ITaskOption>ctx.option;\r\n        // console.log('assert options:', optask);\r\n\r\n\r\n        let tasks: ITaskOption[] = [];\r\n        _.each(_.keys(optask.asserts), name => {\r\n            let op: ITaskOption;\r\n            let sr = optask.asserts[name];\r\n            if (_.isString(sr)) {\r\n                op = <ITaskOption>{ src: sr };\r\n            } else if (_.isNumber(sr)) {\r\n                // watch with Operation.autoWatch.\r\n                op = <ITaskOption>{ loader: [{ oper: sr, name: name, pipes: [] }] };\r\n            } else if (_.isFunction(sr)) {\r\n                op = <ITaskOption>{ loader: sr };\r\n            } else if (_.isArray(sr)) {\r\n                if (sr.length > 0) {\r\n                    if (!_.some(<string[]>sr, it => !_.isString(it))) {\r\n                        op = <ITaskOption>{ src: <string[]>sr };\r\n                    } else {\r\n                        op = <ITaskOption>{ loader: <IDynamicTaskOption[]>sr, watch: true };\r\n                    }\r\n                }\r\n            } else {\r\n                op = sr;\r\n            }\r\n\r\n            if (_.isNull(op) || _.isUndefined(op)) {\r\n                return;\r\n            }\r\n            if (!op.loader) {\r\n                op.loader = [{ name: name, pipes: [], watch: true }]\r\n            }\r\n            op.name = op.name || ctx.subTaskName(name);\r\n            op.src = op.src || (ctx.getSrc({ oper: Operation.default }) + '/**/*.' + name);\r\n            // op.dist = op.dist || ctx.getDist({ oper: Operation.build });\r\n            op.runWay = op.runWay || optask.assertsRunWay || RunWay.parallel;\r\n            tasks.push(op);\r\n        });\r\n        // console.log('assert tasks:', tasks);\r\n        this.buildContext(tasks, ctx);\r\n    }\r\n\r\n    protected buildContext(taskOptions: TaskOption, parent: IContext) {\r\n        let tasks: ITaskOption[] = _.isArray(taskOptions) ? taskOptions : [taskOptions];\r\n\r\n        tasks.forEach(optask => {\r\n            if (optask.oper && this.oper && (this.oper & optask.oper) <= 0) {\r\n                return;\r\n            }\r\n            let ctx = createConextInstance(optask, parent);\r\n            if (optask.asserts) {\r\n                let assert = createConextInstance(_.extend({ name: 'asserts', loader: [], asserts: optask.asserts, order: optask.assertsOrder, assertsRunWay: optask.assertsRunWay }), ctx);\r\n                this.buildAssertContext(assert);\r\n            }\r\n            if (optask.tasks) {\r\n                this.buildSubContext(ctx);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * build sub context.\r\n     *\r\n     * @protected\r\n     * @param {IContext} ctx\r\n     *\r\n     * @memberOf Development\r\n     */\r\n    protected buildSubContext(ctx: IContext) {\r\n\r\n        let optask = <ITaskOption>ctx.option;\r\n        // console.log('task options:', optask);\r\n        if (!optask.tasks) {\r\n            return;\r\n        }\r\n        let tasks = _.isArray(optask.tasks) ? optask.tasks : [optask.tasks];\r\n        let subtasks = tasks.map(subopt => {\r\n            if (!subopt.order) {\r\n                let subOrder = ctx.to(optask.subTaskOrder);\r\n                if (!_.isNumber(subOrder) && subOrder) {\r\n                    optask.order = optask.order || subOrder.runWay;\r\n                } else if (optask.subTaskRunWay) {\r\n                    subopt.order = { runWay: optask.subTaskRunWay };\r\n                }\r\n            }\r\n            subopt.name = ctx.subTaskName(subopt.name);\r\n            return subopt;\r\n        });\r\n        this.buildContext(subtasks, ctx);\r\n\r\n    }\r\n}\r\n"]}