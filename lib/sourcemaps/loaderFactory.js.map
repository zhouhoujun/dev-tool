{"version":3,"sources":["loaderFactory.ts"],"names":[],"mappings":";AACA,4BAA0B,qBAAqB,CAAC,CAAA;AAEhD,+BAA6B,wBAAwB,CAAC,CAAA;AACtD,MAAY,CAAC,WAAM,QAAQ,CAAC,CAAA;AAmB5B;IAEI;IACA,CAAC;IACD,MAAM,CAAC,MAAkB;QAErB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,qBAAS,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,2BAAY,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzB,KAAK,KAAK;oBACN,MAAM,GAAG,IAAI,qBAAS,CAAC,MAAM,CAAC,CAAC;oBAC/B,KAAK,CAAC;gBAEV,KAAK,QAAQ,CAAC;gBACd;oBACI,MAAM,GAAG,IAAI,2BAAY,CAAC,MAAM,CAAC,CAAC;oBAClC,KAAK,CAAC;YACd,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;IACL,CAAC;AACL,CAAC;AA3BY,qBAAa,gBA2BzB,CAAA","file":"../loaderFactory.js","sourcesContent":["import { ITaskLoader } from './ITaskLoader';\r\nimport { DirLoader } from './loaders/DirLoader';\r\nimport { TaskOption } from './TaskConfig';\r\nimport { ModuleLoader } from './loaders/ModuleLoader';\r\nimport * as _ from 'lodash';\r\n/**\r\n * loader factory.\r\n * \r\n * @export\r\n * @interface ILoaderFactory\r\n */\r\nexport interface ILoaderFactory {\r\n    create(option: TaskOption): ITaskLoader;\r\n}\r\n\r\n\r\n/**\r\n * loader factory.\r\n * \r\n * @export\r\n * @class LoaderFactory\r\n * @implements {ILoaderFactory}\r\n */\r\nexport class LoaderFactory implements ILoaderFactory {\r\n\r\n    constructor() {\r\n    }\r\n    create(option: TaskOption): ITaskLoader {\r\n        // if config dir.\r\n        if (option.loader['dir']) {\r\n            return new DirLoader(option);\r\n        }\r\n\r\n        if (_.isString(option.loader)) {\r\n            return new ModuleLoader(option);\r\n        } else {\r\n            let loader = null;\r\n            switch (option.loader.type) {\r\n                case 'dir':\r\n                    loader = new DirLoader(option);\r\n                    break;\r\n\r\n                case 'module':\r\n                default:\r\n                    loader = new ModuleLoader(option);\r\n                    break;\r\n            }\r\n            return loader;\r\n        }\r\n    }\r\n}\r\n"]}