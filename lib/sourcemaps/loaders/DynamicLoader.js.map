{"version":3,"sources":["loaders/DynamicLoader.ts"],"names":["contextDefine_1","require","BaseLoader_1","DynamicLoader","_super","option","env","factory","call","this","__extends","prototype","getContextDefine","default","getTaskModule","BaseLoader","exports"],"mappings":"sNAEAA,gBAAAC,QAAA,0BACAC,aAAAD,QAAA,gBAEAE,cAAA,SAAAC,GAEI,QAAAD,GAAYE,EAAqBC,EAAkBC,SAC/CH,GAAAI,KAAAC,KAAMJ,EAAQC,EAAKC,IAAQE,KAOnC,MAVmCC,WAAAP,EAAAC,GAOrBD,EAAAQ,UAAAC,iBAAV,WACI,MAAOZ,iBAAAa,QAAcJ,KAAKK,kBAElCX,GAVmCD,aAAAa,WAAtBC,SAAAb,cAAAA","file":"../../loaders/DynamicLoader.js","sourcesContent":["import { IContextDefine, IEnvOption, ITaskConfig, ITaskContext } from 'development-core';\r\nimport { ITaskOption } from '../TaskOption';\r\nimport contextDefine from '../utils/contextDefine';\r\nimport { BaseLoader } from './BaseLoader';\r\n\r\nexport class DynamicLoader extends BaseLoader {\r\n\r\n    constructor(option: ITaskOption, env?: IEnvOption, factory?: (cfg: ITaskConfig, parent?: ITaskContext) => ITaskContext) {\r\n        super(option, env, factory);\r\n    }\r\n\r\n\r\n    protected getContextDefine(): IContextDefine | Promise<IContextDefine> {\r\n        return contextDefine(this.getTaskModule())\r\n    }\r\n}\r\n\r\n\r\n"]}