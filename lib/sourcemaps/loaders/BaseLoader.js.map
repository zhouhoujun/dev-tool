{"version":3,"sources":["loaders/BaseLoader.ts"],"names":[],"mappings":"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","file":"../../loaders/BaseLoader.js","sourcesContent":["import * as _ from 'lodash';\r\nimport { Src, Task, EnvOption, Operation, TaskOption, TaskConfig, ITaskDefine } from '../TaskConfig';\r\nimport { ITaskLoader } from '../ITaskLoader';\r\nconst requireDir = require('require-dir');\r\nimport * as chalk from 'chalk';\r\n// import { isAbsolute } from 'path';\r\n\r\nexport abstract class BaseLoader implements ITaskLoader {\r\n\r\n    protected option: TaskOption;\r\n    constructor(option: TaskOption) {\r\n        this.option = option;\r\n    }\r\n\r\n    load(cfg: TaskConfig): Promise<Task[]> {\r\n        return this.getTaskDefine()\r\n            .then(def => {\r\n                if (def.moduleTaskLoader) {\r\n                    return def.moduleTaskLoader(cfg);\r\n                } else {\r\n                    let mdl = this.getTaskModule();\r\n                    return this.loadTaskFromModule(mdl);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    loadConfg(oper: Operation, env: EnvOption): Promise<TaskConfig> {\r\n\r\n        return this.getTaskDefine()\r\n            .then(def => {\r\n                return def.moduleTaskConfig(oper, this.option, env);\r\n            })\r\n            .then(config => {\r\n                return this.bindingConfig(config);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    protected bindingConfig(cfg: TaskConfig): TaskConfig {\r\n        cfg.findTasksInDir = cfg.findTasksInDir || ((dirs) => {\r\n            return this.loadTaskFromDir(dirs);\r\n        });\r\n        cfg.findTasksInModule = cfg.findTasksInModule || ((mdl) => {\r\n            return this.loadTaskFromModule(mdl);\r\n        });\r\n        return cfg;\r\n    }\r\n\r\n    protected getTaskDefine(): Promise<ITaskDefine> {\r\n        let tsdef: ITaskDefine = null;\r\n        if (!_.isString(this.option.loader)) {\r\n            if (this.option.loader.taskDefine) {\r\n                tsdef = this.option.loader.taskDefine;\r\n            }\r\n        }\r\n        if (!tsdef) {\r\n            let mdl = this.getConfigModule();\r\n            tsdef = this.findTaskDefine(mdl);\r\n        }\r\n        if (tsdef) {\r\n            return Promise.resolve(tsdef);\r\n        } else {\r\n            // console.error('can not found task config builder method in module {0}.', mdl);\r\n            return Promise.reject('can not found task define.');\r\n        }\r\n    }\r\n\r\n    protected getConfigModule(): any {\r\n        let ml: string;\r\n        if (_.isString(this.option.loader)) {\r\n            ml = this.option.loader\r\n        } else {\r\n            ml = this.option.loader.configModule || this.option.loader.module;\r\n        }\r\n\r\n        if (_.isString(ml)) {\r\n            return require(ml);\r\n        } else {\r\n            return ml;\r\n        }\r\n    }\r\n\r\n    protected getTaskModule(): any {\r\n        let ml: string;\r\n        if (_.isString(this.option.loader)) {\r\n            ml = this.option.loader\r\n        } else {\r\n            ml = this.option.loader.taskModule || this.option.loader.module;\r\n        }\r\n\r\n        if (_.isString(ml)) {\r\n            return require(ml);\r\n        } else {\r\n            return ml;\r\n        }\r\n    }\r\n\r\n    protected findTaskDefine(mdl: any): ITaskDefine {\r\n        let def: ITaskDefine = null;\r\n        if (this.isTaskDefine(mdl)) {\r\n            def = mdl;\r\n        }\r\n\r\n        if (!def && mdl) {\r\n            _.each(_.keys(mdl), f => {\r\n                if (def) {\r\n                    return false;\r\n                }\r\n                if (this.isTaskDefine(mdl[f])) {\r\n                    def = mdl[f];\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n\r\n        return def;\r\n\r\n    }\r\n\r\n    private isTaskDefine(mdl: any): boolean {\r\n        if (!mdl) {\r\n            return false;\r\n        }\r\n        if (!_.isString(this.option.loader) && this.option.loader.isTaskDefine) {\r\n            return this.option.loader.isTaskDefine(mdl);\r\n        }\r\n        return _.isFunction(mdl['moduleTaskConfig']);\r\n    }\r\n\r\n    protected isTaskFunc(mdl: any, exceptObj = false): boolean {\r\n        if (!mdl) {\r\n            return false;\r\n        }\r\n\r\n        if (!_.isString(this.option.loader) && this.option.loader.isTaskFunc) {\r\n            return this.option.loader.isTaskFunc(mdl);\r\n        }\r\n\r\n        if (_.isFunction(mdl)) {\r\n            return true;\r\n        }\r\n\r\n        return exceptObj;\r\n    }\r\n\r\n    private findTasks(mdl: any): Task[] {\r\n        let tasks = [];\r\n        if (!mdl) {\r\n            return tasks;\r\n        }\r\n        if (this.isTaskFunc(mdl)) {\r\n            tasks.push(mdl);\r\n        } else if (!this.isTaskDefine(mdl)) {\r\n            if (_.isArray(mdl)) {\r\n                _.each(mdl, sm => {\r\n                    tasks.concat(this.findTasks(sm));\r\n                });\r\n            } else {\r\n                _.each(_.keys(mdl), key => {\r\n                    console.log(chalk.grey('register task from:'), chalk.cyan(key));\r\n                    tasks = tasks.concat(this.findTasks(mdl[key]));\r\n                });\r\n            }\r\n        }\r\n        return tasks;\r\n    }\r\n\r\n    protected loadTaskFromModule(mdl: any): Promise<Task[]> {\r\n        let taskfuns: Task[] = this.findTasks(mdl);\r\n        if (!taskfuns || taskfuns.length < 1) {\r\n            console.log(chalk.red('error module:'), mdl);\r\n            return Promise.reject('has not found task in module.');\r\n        } else {\r\n            return Promise.resolve(taskfuns);\r\n        }\r\n    }\r\n\r\n    protected loadTaskFromDir(dirs: Src): Promise<Task[]> {\r\n        return Promise.all(_.map(_.isArray(dirs) ? <string[]>dirs : [<string>dirs], dir => {\r\n            console.log(chalk.grey('begin load task from dir'), chalk.cyan(dir));\r\n            let mdl = requireDir(dir, { recurse: true });\r\n            return this.loadTaskFromModule(mdl);\r\n        }))\r\n            .then(tasks => {\r\n                return _.flatten(tasks);\r\n            });\r\n    }\r\n}\r\n"]}