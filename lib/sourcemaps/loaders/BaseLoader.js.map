{"version":3,"sources":["loaders/BaseLoader.js"],"names":["development_core_1","require","BaseLoader","option","_classCallCheck","this","getTaskDefine","def","loadTasks","cfg","mdl","_this","getTaskModule","findTasks","catch","err","console","error","oper","then","loadConfig","env","config","bindingConfig","tsdef","loader","Promise","resolve","getConfigModule","configModule","module","exports"],"mappings":"AAAA,6XACMA,mBAAqBC,QAAQ,oBAC7BC,sBACF,QAAAA,GAAYC,GAAQC,gBAAAC,KAAAH,GAChBG,KAAKF,OAASA,oDAHhBH,GAAAA,GAAAA,GAAAA,IAME,OAAOK,MAAKC,gBALdJ,KAMY,SAAAK,GALd,GAAAA,EAAAC,UAAoB,MAAAD,GAAAC,UAAAC,EAEnB,IAAAC,GAAAC,EAAAC,eASW,OAAOH,GAAII,UAAUH,KAGxBI,MAAM,SAAAC,GAXLC,QAAAC,MAAAF,uCAGFG,EAAIX,GAAIC,GAAAA,GAAAA,IACJ,OAAAH,MAAAC,gBACHa,KAFD,SAAAZ,GAII,MAAAA,GAAAa,WAAUF,EAAKN,EAAAA,OAAfS,KAEHF,KAAA,SAAAG,GACJ,MACIR,GAAMS,cAAOD,KAVXR,MAAP,SAAAC,GAaHC,QAAAC,MAAAF,2CAaaN,GAEV,MAdiBA,GAAAT,mBAAAuB,cAAAd,2CAIhB,GAAAe,GACS,KACNC,EAAApB,KAAOF,OAAKoB,MACf,IAAAE,EACIX,WAEJ,MADGE,GAAAA,EAAQC,WARZS,QAAAC,QAAAH,EAuBI,IAAId,GAAML,KAAKuB,iBACf,OAAO5B,oBAbDS,uBAAKC,6CAiBf,GAAIe,GAASpB,KAAKF,OAAOsB,MACzB,OAAOA,GAAOI,cAAgBJ,EAAOK,+CAZrC,GAAAL,GAAIA,KAAStB,OAAKA,MAClB,OAAAsB,GAAIA,YAAmBA,EAAAK,eAGtBC,SAAA7B,WACIA","file":"../../loaders/BaseLoader.js","sourcesContent":["\"use strict\";\nconst development_core_1 = require('development-core');\nclass BaseLoader {\n    constructor(option) {\n        this.option = option;\n    }\n    load(cfg) {\n        return this.getTaskDefine()\n            .then(def => {\n            if (def.loadTasks) {\n                return def.loadTasks(cfg);\n            }\n            else {\n                let mdl = this.getTaskModule();\n                return cfg.findTasks(mdl);\n            }\n        })\n            .catch(err => {\n            console.error(err);\n        });\n    }\n    loadConfg(oper, env) {\n        return this.getTaskDefine()\n            .then(def => {\n            return def.loadConfig(oper, this.option, env);\n        })\n            .then(config => {\n            return this.bindingConfig(config);\n        })\n            .catch(err => {\n            console.error(err);\n        });\n    }\n    bindingConfig(cfg) {\n        cfg = development_core_1.bindingConfig(cfg);\n        return cfg;\n    }\n    getTaskDefine() {\n        let tsdef = null;\n        let loader = this.option.loader;\n        if (loader.taskDefine) {\n            tsdef = loader.taskDefine;\n            return Promise.resolve(tsdef);\n        }\n        else {\n            let mdl = this.getConfigModule();\n            return development_core_1.findTaskDefineInModule(mdl);\n        }\n    }\n    getConfigModule() {\n        let loader = this.option.loader;\n        return loader.configModule || loader.module;\n    }\n    getTaskModule() {\n        let loader = this.option.loader;\n        return loader.taskModule || loader.module;\n    }\n}\nexports.BaseLoader = BaseLoader;\n"]}