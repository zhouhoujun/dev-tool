{"version":3,"sources":["loaders/BaseLoader.ts"],"names":[],"mappings":"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","file":"../../loaders/BaseLoader.js","sourcesContent":["import { ITask, ITaskDefine, IContextDefine, ITaskContext } from 'development-core';\r\nimport { ITaskOption } from '../TaskOption';\r\nimport { IContext } from '../IContext';\r\nimport { ITaskLoader } from '../ITaskLoader';\r\nimport { ILoaderOption } from '../ILoaderOption';\r\n\r\n\r\n/**\r\n * base loader.\r\n *\r\n * @export\r\n * @abstract\r\n * @class BaseLoader\r\n * @implements {ITaskLoader}\r\n */\r\nexport abstract class BaseLoader implements ITaskLoader {\r\n\r\n    name = 'base';\r\n\r\n    constructor(protected ctx: IContext) {\r\n    }\r\n\r\n    get option(): ITaskOption {\r\n        return this.ctx.option as ITaskOption;\r\n    }\r\n\r\n    private _tasks: Promise<ITask[]>;\r\n    load(): Promise<ITask[]> {\r\n        if (!this._tasks) {\r\n            this._tasks = this.taskDef\r\n                .then((def) => {\r\n                    if (def.loadConfig) {\r\n                        this.ctx.setConfig(def.loadConfig(this.ctx.option, this.ctx.env));\r\n                    }\r\n                    if (def['getContext']) {\r\n                        let cdef = def as IContextDefine;\r\n                        let customCtx = cdef.getContext(this.ctx.getConfig());\r\n                        this.ctx.setConfig(customCtx.getConfig());\r\n                    }\r\n                    if (def['setContext']) {\r\n                        let cdef = def as IContextDefine;\r\n                        cdef.setContext(this.ctx);\r\n                    }\r\n                    return def;\r\n                })\r\n                .then(def => {\r\n                    return this.loadTasks(this.ctx, def);\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    return null;\r\n                });\r\n        }\r\n        return this._tasks;\r\n    }\r\n\r\n    private _taskDef: Promise<ITaskDefine>;\r\n    protected get taskDef(): Promise<ITaskDefine> {\r\n        if (!this._taskDef) {\r\n            this._taskDef = Promise.resolve(this.loadTaskDefine());\r\n        }\r\n\r\n        return this._taskDef;\r\n    }\r\n\r\n\r\n    protected loadTasks(context: ITaskContext, def: ITaskDefine): Promise<ITask[]> {\r\n        def = def || {};\r\n        if (def.tasks) {\r\n            return def.tasks(context);\r\n        } else if (def.loadTasks) {\r\n            return def.loadTasks(context);\r\n        } else {\r\n            let mdl = this.getTaskModule();\r\n            return context.findTasks(mdl);\r\n        }\r\n    }\r\n\r\n    protected abstract loadTaskDefine(): ITaskDefine | Promise<ITaskDefine>;\r\n\r\n    protected getConfigModule(): string | Object {\r\n        let loader: ILoaderOption = this.option.loader as ILoaderOption;\r\n        return loader.configModule || loader.module;\r\n    }\r\n\r\n    protected getTaskModule(): string | Object {\r\n        let loader: ILoaderOption = this.option.loader as ILoaderOption;\r\n        return loader.taskModule || loader.module;\r\n    }\r\n}\r\n"]}