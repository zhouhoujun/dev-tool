"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function __export(e){for(var n in e)exports.hasOwnProperty(n)||(exports[n]=e[n])}function _runSequence(e,n){var t=Promise.resolve();return n&&n.length>0&&_.each(n,function(n){t=t.then(function(){var t=null,r=null;return new Promise(function(o,a){var s={};_.each(_.isArray(n)?n:[n],function(e){s[e]=!1}),t=function(e){a(e)},r=function(e){s[e.task]=!0,_.some(_.values(s),function(e){return!e})||o()},e.on("task_stop",r).on("task_err",t),e.start(n)}).then(function(){e.removeListener&&(e.removeListener("task_stop",r),e.removeListener("task_err",t))}).catch(function(n){e.removeListener&&(e.removeListener("task_stop",r),e.removeListener("task_err",t)),console.error(n)})})}),t}function files(e,n){var t=[];return n=n||function(e){return!0},_.each(fs_1.readdirSync(e),function(r){var o=e+"/"+r,a=fs_1.lstatSync(o);a.isDirectory()?t=t.concat(files(o,n)):n(o)&&t.push(o)}),t}function createWatchTask(e){return function(n,t){var r=_.isFunction(e.watch)?e.watch(t):e.watch;return _.isFunction(_.last(r))||r.push(function(n){e.watchChanged&&e.watchChanged(n,t)}),n.task(e.name,function(){console.log("watch, src:",chalk.cyan.call(chalk,t.option.src)),n.watch(t.option.src,r)}),e.name}}function createTask(e){return function(n,t){return n.task(e.name,function(){return createTaskWork(n,t,e)}),e.name}}function createTaskWork(e,n,t){var r=Promise.resolve(e.src(n.option.src));if(t.pipes){var o=_.isFunction(t.pipes)?t.pipes(n):t.pipes;_.each(o,function(e){r=r.then(function(t){return Promise.resolve(_.isFunction(e)?e(n):e).then(function(e){return t.pipe(e)})})})}else t.pipe&&(r=r.then(function(e){return t.pipe(e,n)}));return r.then(function(r){if(t.output){var o=_.isFunction(t.output)?t.output(n):t.output;return Promise.all(_.map(o,function(t){return new Promise(function(o,a){Promise.resolve(_.isFunction(t)?t(r,n,e):t).then(function(e){r.pipe(e).once("end",o).once("error",a)}).catch(function(e){a(e)})})}))}return new Promise(function(t,o){r.pipe(e.dest(n.getDist(n.option))).once("end",t).once("error",o)})}),r.catch(function(e){console.log(chalk.red(e))})}function dynamicTask(e,n,t){var r=[];return _.each(_.isArray(e)?e:[e],function(e){if(!(e.oper&&(e.oper&n)<=0))if(e.watch){if(!t.watch)return;console.log("register watch  dynamic task:",chalk.cyan(e.name)),r.push(createWatchTask(e))}else _.isFunction(e.task)?(console.log("register custom dynamic task:",chalk.cyan(e.name)),r.push(function(n,t){return n.task(e.name,function(){e.task(t,n)}),e.name})):(console.log("register pipes  dynamic task:",chalk.cyan(e.name)),r.push(createTask(e)))}),r}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),_=require("lodash"),fs_1=require("fs"),minimist=require("minimist"),LoaderFactory_1=require("./LoaderFactory"),TaskConfig_1=require("./TaskConfig"),chalk=require("chalk");__export(require("./TaskConfig")),__export(require("./LoaderFactory")),__export(require("./loaders/BaseLoader"));var Development=function(){function e(n,t){_classCallCheck(this,e),this.dirname=n,this.option=t,this.globals={}}return _createClass(e,[{key:"run",value:function(e,n){var t=this;return n.root||(n.root=this.dirname),n.help&&(console.log(chalk.grey("... main help  ...")),this.printHelp(n.help)),this.loadTasks(e,this.option.tasks,n).then(function(n){return console.log(chalk.grey("run sequenec tasks:"),n),t.runSequence(e,n)}).catch(function(e){console.error(e)})}},{key:"bindingConfig",value:function(e){return e.globals=this.globals,e.fileFilter=e.fileFilter||files,e.runSequence=e.runSequence||_runSequence,e.dynamicTasks=e.dynamicTasks||function(n){return dynamicTask(n,e.oper,e.env)},e.getDist=e.getDist||function(n){n=n||e.option;var t=void 0;switch(e.oper){case TaskConfig_1.Operation.build:t=n.build||n.dist;break;case TaskConfig_1.Operation.test:t=n.test||n.build||n.dist;break;case TaskConfig_1.Operation.e2e:t=n.e2e||n.build||n.dist;break;case TaskConfig_1.Operation.release:t=n.release||n.dist;break;case TaskConfig_1.Operation.deploy:t=n.deploy||n.dist;break;default:t=""}return t},e}},{key:"runSequence",value:function(e,n){return _runSequence(e,n)}},{key:"toSquence",value:function(e,n){var t=this,r=[];return _.each(e,function(e){e&&(_.isString(e)?r.push(e):_.isArray(e)?r.push(_.flatten(t.toSquence(e,n))):e.name&&e.oper&&(e.oper&n)>0&&r.push(e.name))}),r}},{key:"loadTasks",value:function(e,n,t){var r=this;return Promise.all(_.map(_.isArray(n)?n:[n],function(n){n.dist=n.dist||"dist";var o=void 0;o=t.deploy?TaskConfig_1.Operation.deploy:t.release?TaskConfig_1.Operation.release:t.e2e?TaskConfig_1.Operation.e2e:t.test?TaskConfig_1.Operation.test:TaskConfig_1.Operation.build,console.log(chalk.grey("begin load task via loader:"),n.loader);var a=r.createLoader(n);return a.loadConfg(o,t).then(function(n){return console.log(chalk.green("task config loaded.")),n.env.help?(n.printHelp&&(console.log(chalk.grey("...development default help...")),n.printHelp(_.isString(n.env.help)?n.env.help:"")),[]):(n=r.bindingConfig(n),r.loadSubTask(e,n).then(function(t){return Promise.all([a.load(n),r.loadAssertTasks(e,n)]).then(function(o){return console.log(chalk.green("tasks loaded.")),r.setup(e,n,o[0],o[1],t)})}))})})).then(function(e){return _.flatten(e)})}},{key:"setup",value:function(e,n,t,r,o){var a=this;return Promise.all(_.map(t,function(t){return t(e,n)})).then(function(e){var t=a.toSquence(e,n.oper);if(_.isFunction(n.option.runTasks))return n.option.runTasks(n.oper,t,o,r);if(_.isArray(n.option.runTasks))t=n.option.runTasks;else if(n.runTasks)return n.runTasks(o,t,r);return r&&t.splice(0,0,r),o&&t.splice(0,0,o),t})}},{key:"loadSubTask",value:function(e,n){var t=n.option;return t.tasks?(_.each(_.isArray(t.tasks)?t.tasks:[t.tasks],function(e){e.src=e.src||t.src,e.dist=e.dist||t.dist}),this.loadTasks(e,t.tasks,n.env).then(function(t){if(t&&t.length>0){var r=_.first(t),o=_.last(t),a=_.isArray(r)?_.first(r):r,s=_.isArray(o)?_.last(o):o,i=""+(n.option.name?n.option.name+"_":"")+a+"_"+s;return e.task(i,function(){return _runSequence(e,t)}),i}return null})):Promise.resolve(null)}},{key:"loadAssertTasks",value:function(e,n){var t=this,r=n.option;if(!r.asserts)return Promise.resolve(null);var o=function(){var o=[];return _.each(_.keys(r.asserts),function(e){var n=void 0,t=r.asserts[e];n=_.isString(t)||_.isArray(t)?{src:t,loader:[{name:e,pipes:[]},{name:e+"-watch",watch:[e]}]}:t,_.isNull(n)||_.isUndefined(n)||(n.name=e,n.src=n.src||r.src+"/**/*."+e,n.dist=n.dist||r.dist,o.push(n))}),{v:Promise.all(_.map(o,function(r){return t.loadTasks(e,r,n.env).then(function(e){return{task:r,sq:e}})})).then(function(n){return _.map(n,function(n){var t=n.sq;return t&&t.length>0?1===t.length?t[0]:(e.task(n.task.name,function(){return _runSequence(e,t)}),n.task.name):n.sq})})}}();return"object"===("undefined"==typeof o?"undefined":_typeof(o))?o.v:void 0}},{key:"createLoader",value:function(e){var n=this,t=null;return _.isFunction(this.option.loaderFactory)||!function(){var e=new LoaderFactory_1.LoaderFactory;n.option.loaderFactory=function(n){return e.create(n)}}(),t=this.option.loaderFactory(e)}},{key:"printHelp",value:function(e){"en"===e?console.log("\n                /**\n                 * gulp [build] [--env production|development] [--config name] [--root path] [--watch] [--test] [--serve] [--release] [--task taskname]\n                 * @params\n                 *  --env  development or production;\n                 *  --config app setting\n                 *  --root path, set relative path of the development tool root.\n                 *  --watch  watch src file change or not. if changed will auto update to node service. \n                 *  --release release web app or not. if [--env production], default to release. \n                 *  --test  need auto load test file to node service.\n                 *  --deploy run deploy tasks to deploy project.  \n                 *  --serve start node web service or not.\n                 *  --task taskname  spruce task taskname\n                 **/"):console.log("\n                /**\n                 * gulp [build] [--env production|development] [--config name] [--root path] [--watch] [--test] [--serve] [--release] [--task taskname]\n                 * @params\n                 *  --env 发布环境 默认开发环境development;\n                 *  --config 设置配置文件;\n                 *  --root path, 设置编译环境相对路径\n                 *  --watch  是否需要动态监听文件变化\n                 *  --release 是否release编译, [--env production] 默认release \n                 *  --test  启动自动化测试\n                 *  --deploy 运行加载deploy tasks, 编译发布项目。  \n                 *  --serve  是否在开发模式下 开启node web服务\n                 *  --task taskname  运行单独任务taskname\n                 **/")}}],[{key:"create",value:function(n,t,r){var o=new e(t,r);return n.task("build",function(e){var t=minimist(process.argv.slice(2),{string:"env",default:{env:process.env.NODE_ENV||"development"}});return o.run(n,t)}),n.task("default",function(){n.start("build")}),o}}]),e}();exports.Development=Development,exports.runSequence=_runSequence,exports.files=files,exports.dynamicTask=dynamicTask;
//# sourceMappingURL=sourcemaps/tools.js.map
