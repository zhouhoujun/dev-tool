{"version":3,"sources":["loaderFactory.ts"],"names":[],"mappings":"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","file":"../loaderFactory.js","sourcesContent":["import { ITaskLoader } from './ITaskLoader';\r\nimport { DirLoader } from './loaders/DirLoader';\r\nimport { IEnvOption } from 'development-core';\r\n\r\nimport { ITaskOption, ILoaderOption, IDynamicLoaderOption, contextFactory } from './TaskOption'\r\nimport { ModuleLoader } from './loaders/ModuleLoader';\r\nimport { DynamicLoader } from './loaders/DynamicLoader';\r\nimport { CustomLoader } from './loaders/CustomLoader';\r\nimport * as _ from 'lodash';\r\nimport * as chalk from 'chalk';\r\n\r\n/**\r\n * loader factory.\r\n * \r\n * @export\r\n * @interface ILoaderFactory\r\n */\r\nexport interface ILoaderFactory {\r\n    /**\r\n     * create loader.\r\n     * \r\n     * @param {ITaskOption} option\r\n     * @param {IEnvOption} [env]\r\n     * @param {contextFactory} [factory]\r\n     * @returns {ITaskLoader}\r\n     * \r\n     * @memberOf ILoaderFactory\r\n     */\r\n    create(option: ITaskOption, env?: IEnvOption, factory?: contextFactory): ITaskLoader;\r\n}\r\n\r\n\r\n/**\r\n * loader factory.\r\n * \r\n * @export\r\n * @class LoaderFactory\r\n * @implements {ILoaderFactory}\r\n */\r\nexport class LoaderFactory implements ILoaderFactory {\r\n\r\n    constructor() {\r\n    }\r\n    create(option: ITaskOption, env?: IEnvOption, factory?: contextFactory): ITaskLoader {\r\n\r\n        if (_.isString(option.loader)) {\r\n            option.loader = {\r\n                module: option.loader\r\n            };\r\n            return new ModuleLoader(option, env, factory);\r\n        } else if (_.isFunction(option.loader)) {\r\n            return new CustomLoader(option, option.loader, factory);\r\n        } else if (_.isArray(option.loader)) {\r\n            option.loader = <IDynamicLoaderOption>{\r\n                dynamicTasks: option.loader || []\r\n            };\r\n            return new DynamicLoader(option, env, factory);\r\n        } else if (option.loader) {\r\n            // if config dir.\r\n            if (option.loader['dir']) {\r\n                return new DirLoader(option, env);\r\n            }\r\n\r\n            // dynamic task name.\r\n            if (_.isString(option.loader['name'])) {\r\n                option.loader = <IDynamicLoaderOption>{\r\n                    dynamicTasks: option.loader\r\n                };\r\n                return new DynamicLoader(option, env, factory);\r\n            }\r\n\r\n            // if config pipe and taskName.\r\n            if (option.loader['dynamicTasks']) {\r\n                return new DynamicLoader(option);\r\n            }\r\n\r\n            let loader: ITaskLoader = null;\r\n            let loderOption: ILoaderOption = option.loader;\r\n            switch (loderOption.type) {\r\n                case 'dir':\r\n                    loader = new DirLoader(option, env, factory);\r\n                    break;\r\n\r\n                case 'dynamic':\r\n                    loader = new DynamicLoader(option, env, factory);\r\n                    break;\r\n\r\n                case 'module':\r\n                default:\r\n                    loader = new ModuleLoader(option, env, factory);\r\n                    break;\r\n            }\r\n            return loader;\r\n        } else {\r\n            console.log(chalk.cyan(<string>option.name), chalk.yellow('loader not setting, use dynamic loader.'))\r\n            option.loader = <IDynamicLoaderOption>{\r\n                dynamicTasks: []\r\n            };\r\n            return new DynamicLoader(option, env, factory);\r\n        }\r\n    }\r\n}\r\n"]}